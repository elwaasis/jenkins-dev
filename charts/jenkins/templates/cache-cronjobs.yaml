{{- /* create agent map */}}
{{- /* merge .Values.agent into additional agent(s) to propogate values except cache.clearJob.create */}}
{{- $_ := set .Values "agentMap" (dict "agent" .Values.agent) }}
{{- $agentCopy := deepCopy .Values.agentMap.agent }}
{{- $_ := set $agentCopy.cache.clearJob "create" false }}
{{- range $name, $additionalAgent := .Values.additionalAgents }}
    {{- /* use mergeOverwrite - see helm issue 7313 */}}
    {{- $_ := set $.Values.agentMap $name (mergeOverwrite (deepCopy $agentCopy) $additionalAgent) }}
{{- end }}
{{- range $name, $agent := .Values.agentMap }}
{{- if and $agent.cache.clearJob.create $agent.cache.volume }}
---
apiVersion: batch/v1beta1
kind: CronJob
metadata:
  name: {{ include "jenkins.fullname" $ }}-{{ $agent.cache.clearJob.componentName }}
  namespace: {{ template "jenkins.master.slaveKubernetesNamespace" $ }}
  labels:
    "app.kubernetes.io/name": '{{ template "jenkins.name" $ }}'
    "helm.sh/chart": "{{ $.Chart.Name }}-{{ $.Chart.Version }}"
    "app.kubernetes.io/managed-by": "{{ $.Release.Service }}"
    "app.kubernetes.io/instance": "{{ $.Release.Name }}"
    "app.kubernetes.io/component": "{{ $.Values.agent.componentName }}-clear-cache"
spec:
  concurrencyPolicy : "Forbid"
  failedJobsHistoryLimit : 5
  successfulJobsHistoryLimit: 5
  schedule: "{{ $agent.cache.clearJob.schedule }}"
  jobTemplate:
    spec:
      backoffLimit: 6
      template:
        metadata:
          labels:
            "app.kubernetes.io/name": '{{ template "jenkins.name" $ }}'
            "helm.sh/chart": "{{ $.Chart.Name }}-{{ $.Chart.Version }}"
            "app.kubernetes.io/managed-by": "{{ $.Release.Service }}"
            "app.kubernetes.io/instance": "{{ $.Release.Name }}"
            "app.kubernetes.io/component": "{{ $.Values.agent.componentName }}-clear-cache"
        spec:
          volumes:
            - name: cache-volume
              persistentVolumeClaim:
                claimName: {{ include "jenkins.fullname" $ }}-{{ $agent.cache.volume.pvcComponentName }}
          containers:
            - name: clear-cache
              image: "{{ $agent.cache.clearJob.image }}:{{ $agent.cache.clearJob.tag }}"
              volumeMounts:
                - name: cache-volume
                  mountPath: {{ $agent.cache.volume.mountPath }}
              resources:
                limits:
                  cpu: 500m
                  memory: 512Mi
                requests:
                  cpu: 500m
                  memory: 512Mi
              workingDir: {{ $agent.cache.volume.mountPath }}
              command: {{ toYaml $agent.cache.clearJob.command | nindent 16 }}
              args: {{ toYaml $agent.cache.clearJob.args | nindent 16 }}
          restartPolicy: OnFailure
{{- end }}
{{- end }}
{{- $_ := unset .Values "agentMap" }}
